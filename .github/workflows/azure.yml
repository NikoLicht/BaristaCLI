trigger:
  branches:
    include:
      - main
  paths:
    exclude:
      - Executables/*
  

pool:
  vmImage: 'windows-latest'

steps:
  - checkout: self

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'

  - script: |
      powershell -ExecutionPolicy Unrestricted -File build.ps1
    displayName: 'Run Build Script'

  - script: |
      dir Executables
    displayName: 'Check Executables Folder'

  - script: |
      echo "Reading version.txt with powershell"
      powershell -Command "Get-Content Executables/version.txt"
    displayName: 'Read version.txt with powershell'

  - script: |
      echo "Reading version from version.txt with PowerShell..."
      
      for /f "delims=" %%x in ('powershell -Command "Get-Content Executables/version.txt | Out-String | ForEach-Object { $_.Trim() }"') do set VERSION=%%x

      echo "Latest version: %VERSION%"

      set BUILD_FILE=Executables/BaristaCLI_v%VERSION%.exe
      echo "Checking if build file exists: [%BUILD_FILE%]"
      
      if not exist %BUILD_FILE% (
          echo "ERROR: Build file not found!"
          exit /b 1
      )

      echo "Publishing [%BUILD_FILE%]"
      echo ##vso[task.setvariable variable=BUILD_FILE]%BUILD_FILE%
    displayName: 'Read version.txt and set BUILD_FILE'



  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(BUILD_FILE)'  # Publishes only the latest .exe
      artifactName: 'latest_build'
    displayName: 'Publish Latest Build'


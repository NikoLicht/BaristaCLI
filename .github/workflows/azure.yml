trigger:
  branches:
    include:
      - main
  paths:
    exclude:
      - Executables/*
  

pool:
  vmImage: 'windows-latest'

steps:
  - checkout: self

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'

  - script: |
      powershell -ExecutionPolicy Unrestricted -File build.ps1
    displayName: 'Run Build Script'

  - script: |
      dir Executables
    displayName: 'Check Executables Folder'

  - script: |
      echo "Reading version.txt with powershell"
      powershell -Command "Get-Content Executables/version.txt"
    displayName: 'Read version.txt with powershell'

  - script: |
      echo "Reading version from version.txt with PowerShell..."
      
      $version = Get-Content Executables/version.txt | Out-String
      $version = $version.Trim()

      if ($version -match '^\d+$') {
          Write-Host "Latest version: $version"
      } else {
          Write-Host "ERROR: Invalid version format in version.txt"
          exit 1
      }

      $buildFile = "Executables/BaristaCLI_v$version.exe"
      Write-Host "Checking if build file exists: $buildFile"

      if (-not (Test-Path $buildFile)) {
          Write-Host "ERROR: Build file not found!"
          exit 1
      }

      echo "##vso[task.setvariable variable=BUILD_FILE]$buildFile"
      Write-Host "Publishing $buildFile"
    displayName: 'Read version.txt and set BUILD_FILE'


  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(BUILD_FILE)'  # Publishes only the latest .exe
      artifactName: 'latest_build'
    displayName: 'Publish Latest Build'

